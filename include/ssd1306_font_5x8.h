// Vertical bitmaps. Each is 8 pixels high and 5 pixels wide

#ifndef _SSD1306_FONT_5x8_
#define _SSD1306_FONT_5x8_
static uint8_t font5x8[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, // char ' ' (0x20/32) 0
    0x00, 0x00, 0x2E, 0x00, 0x00, // char '!' (0x21/33) 5
    0x06, 0x00, 0x06, 0x00, 0x00, // char '"' (0x22/34) 10
    0x14, 0x7F, 0x14, 0x7F, 0x14, // char '#' (0x23/35)
    0x06, 0x49, 0x7F, 0x49, 0x30, // char '$' (0x24/36) 20
    0x24, 0x10, 0x08, 0x24, 0x00, // char '%' (0x25/37)
    0x36, 0x49, 0x36, 0x50, 0x00, // char '&' (0x26/38) 30
    0x00, 0x00, 0x00, 0x06, 0x00, // char ''' (0x27/39)
    0x00, 0x41, 0x36, 0x00, 0x00, // char '(' (0x28/40) 40
    0x00, 0x36, 0x41, 0x00, 0x00, // char ')' (0x29/41)
    0x00, 0x08, 0x00, 0x00, 0x00, // char '*' (0x2A/42) 50
    0x00, 0x08, 0x1C, 0x08, 0x00, // char '+' (0x2B/43)
    0x40, 0x20, 0x00, 0x00, 0x00, // char ',' (0x2C/44) 60
    0x00, 0x08, 0x08, 0x00, 0x00, // char '-' (0x2D/45)
    0x20, 0x00, 0x00, 0x00, 0x00, // char '.' (0x2E/46) 70
    0x00, 0x30, 0x06, 0x00, 0x00, // char '/' (0x2F/47)
    0x36, 0x41, 0x41, 0x36, 0x00, // char '0' (0x30/48) 80
    0x00, 0x00, 0x00, 0x36, 0x00, // char '1' (0x31/49)
    0x30, 0x49, 0x49, 0x06, 0x00, // char '2' (0x32/50) 90
    0x00, 0x49, 0x49, 0x36, 0x00, // char '3' (0x33/51)
    0x06, 0x08, 0x08, 0x36, 0x00, // char '4' (0x34/52) 100
    0x06, 0x49, 0x49, 0x30, 0x00, // char '5' (0x35/53)
    0x36, 0x49, 0x49, 0x30, 0x00, // char '6' (0x36/54) 110
    0x00, 0x01, 0x01, 0x36, 0x00, // char '7' (0x37/55)
    0x36, 0x49, 0x49, 0x36, 0x00, // char '8' (0x38/56)
    0x06, 0x49, 0x49, 0x36, 0x00, // char '9' (0x39/57)
    0x00, 0x14, 0x00, 0x00, 0x00, // char ':' (0x3A/58) 130
    0x20, 0x14, 0x00, 0x00, 0x00, // char ';' (0x3B/59)
    0x00, 0x08, 0x14, 0x22, 0x00, // char '<' (0x3C/60) 140
    0x00, 0x14, 0x14, 0x14, 0x00, // char '=' (0x3D/61)
    0x00, 0x22, 0x14, 0x08, 0x00, // char '>' (0x3E/62) 150
    0x00, 0x01, 0x31, 0x06, 0x00, // char '?' (0x3F/63)
    0x36, 0x49, 0x55, 0x59, 0x2E, // char '@' (0x40/64)
    0x36, 0x09, 0x09, 0x36, 0x00, // char 'A' (0x41/65)
    0x77, 0x49, 0x49, 0x36, 0x00, // char 'B' (0x42/66) 170
    0x36, 0x41, 0x41, 0x00, 0x00, // char 'C' (0x43/67)
    0x77, 0x41, 0x41, 0x36, 0x00, // char 'D' (0x44/68) 180
    0x36, 0x49, 0x49, 0x00, 0x00, // char 'E' (0x45/69)
    0x36, 0x09, 0x09, 0x00, 0x00, // char 'F' (0x46/70) 190
    0x36, 0x41, 0x51, 0x30, 0x00, // char 'G' (0x47/71)
    0x36, 0x08, 0x08, 0x36, 0x00, // char 'H' (0x48/72) 200
    0x00, 0x00, 0x36, 0x00, 0x00, // char 'I' (0x49/73)
    0x00, 0x40, 0x40, 0x36, 0x00, // char 'J' (0x4A/74) 210
    0x36, 0x08, 0x14, 0x22, 0x00, // char 'K' (0x4B/75)
    0x36, 0x40, 0x40, 0x00, 0x00, // char 'L' (0x4C/76) 220
    0x36, 0x01, 0x06, 0x01, 0x36, // char 'M' (0x4D/77)
    0x36, 0x04, 0x10, 0x36, 0x00, // char 'N' (0x4E/78) 230
    0x36, 0x41, 0x41, 0x36, 0x00, // char 'O' (0x4F/79)
    0x36, 0x09, 0x09, 0x06, 0x00, // char 'P' (0x50/80) 240
    0x36, 0x41, 0x21, 0x56, 0x00, // char 'Q' (0x51/81)
    0x36, 0x09, 0x19, 0x26, 0x00, // char 'R' (0x52/82) 250
    0x06, 0x49, 0x49, 0x30, 0x00, // char 'S' (0x53/83)
    0x00, 0x01, 0x37, 0x01, 0x00, // char 'T' (0x54/84) 260
    0x36, 0x40, 0x40, 0x36, 0x00, // char 'U' (0x55/85)
    0x36, 0x40, 0x36, 0x00, 0x00, // char 'V' (0x56/86) 270
    0x36, 0x40, 0x30, 0x40, 0x36, // char 'W' (0x57/87)
    0x36, 0x08, 0x08, 0x36, 0x00, // char 'X' (0x58/88)
    0x06, 0x48, 0x48, 0x36, 0x00, // char 'Y' (0x59/89)
    0x20, 0x51, 0x49, 0x45, 0x02, // char 'Z' (0x5A/90)
    0x77, 0x41, 0x41, 0x00, 0x00, // char '[' (0x5B/91)
    0x00, 0x06, 0x30, 0x00, 0x00, // char '\' (0x5C/92)
    0x00, 0x41, 0x41, 0x77, 0x00, // char ']' (0x5D/93)
    0x00, 0x02, 0x01, 0x02, 0x00, // char '^' (0x5E/94)
    0x00, 0x40, 0x40, 0x00, 0x00, // char '_' (0x5F/95)
    0x00, 0x01, 0x02, 0x00, 0x00, // char '`' (0x60/96)
};
#endif
